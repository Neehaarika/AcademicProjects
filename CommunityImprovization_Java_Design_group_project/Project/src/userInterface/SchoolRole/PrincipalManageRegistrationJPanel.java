/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface.SchoolRole;

import Business.Enterprise.Enterprise;
import Business.Network.Area;
import Business.Network.Network;
import Business.Organization.Organization;
import Business.Role.ClassVacancy;
import Business.Role.Role;
import Business.Role.SchoolRole;
import Business.UserAccount.UserAccount;
import Business.WorkRequest.EduVolToSchoolWorkRequest;
import Business.WorkRequest.WorkRequest;
import java.awt.CardLayout;
import java.awt.Component;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author mahes
 */


public class PrincipalManageRegistrationJPanel extends javax.swing.JPanel {

    /**
     * Creates new form PrincipalManageRegistrationJPanel
     */
    
    private JPanel userProcessContainer;
    private UserAccount userAccount;
    private Organization organization;
    private Network network;
    private Enterprise enterprise;
    private Role role;
    private Area area;
    
    private String currentStatus="Admission Requested";
    private String acceptStatus="Admitted!";
    private String rejectStatus="Admission Rejected";
    
    private String[] classNumber={"I", "II", "III", "IV", "V", "VI", "VII", "VIII", "IX", "X", "XI", "XII"};
    
    PrincipalManageRegistrationJPanel(JPanel userProcessContainer, UserAccount userAccount, Organization organization,
                            Enterprise enterprise, Network network) {
        initComponents();
        
        this.userProcessContainer = userProcessContainer;
        this.userAccount = userAccount;
        this.organization = organization;
        this.network = network;
        this.enterprise = enterprise;
        this.role= (SchoolRole)userAccount.getRole();
        
        
        populateArea();
        populateClasses();
    }

    private void populateClasses(){
        comboClass.removeAllItems();
        
        for(int i=0; i<12; i++ ){//((SchoolRole)role).getClassNumber()
            
            comboClass.addItem(classNumber[i]);
        }             
    }
    
    
    private void populateTable(Area area) {
        DefaultTableModel model = (DefaultTableModel) tbl.getModel();

        model.setRowCount(0);

        for (WorkRequest wr : organization.getWorkQueue().getWorkRequestList()) {

            if (!(wr instanceof EduVolToSchoolWorkRequest)) {
                continue;
            }

            if (!((EduVolToSchoolWorkRequest) wr).getArea().equals(area)) {
                continue;
            }
            
            if(!((EduVolToSchoolWorkRequest) wr).getStatus().equals(currentStatus) ){
                continue;
            }

            Object[] row = new Object[7];

            row[0] = ((EduVolToSchoolWorkRequest) wr).getSurveyID();
            row[1] = ((EduVolToSchoolWorkRequest) wr);
            row[2] = ((EduVolToSchoolWorkRequest) wr).getAge();
            row[3] = ((EduVolToSchoolWorkRequest) wr).getEduStatus();
            row[4] = ((EduVolToSchoolWorkRequest) wr).getEduHighest();
            row[5] = ((EduVolToSchoolWorkRequest) wr).getSender();
            row[6] = ((EduVolToSchoolWorkRequest) wr).getStatus();

            model.addRow(row);
            

        }
    }
    
    public void populateArea() {
        comboArea.removeAllItems();
        comboArea.addItem(null);

        for (Area a : network.getAreaList()) {
            comboArea.addItem(a);
        }
    }

    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        btnReject = new javax.swing.JButton();
        btnAccept = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl = new javax.swing.JTable();
        comboArea = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        comboClass = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtVacancy = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Manage Admissions");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(448, 85, -1, -1));

        btnBack.setText("<<Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 570, -1, -1));

        btnReject.setText("Reject Registration");
        btnReject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRejectActionPerformed(evt);
            }
        });
        add(btnReject, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 520, -1, -1));

        btnAccept.setText("Accept Registration");
        btnAccept.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAcceptActionPerformed(evt);
            }
        });
        add(btnAccept, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 520, -1, -1));

        tbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Survey ID", "Name", "Age", "Education Status", "Highest Edu Level", "Sender", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tbl);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 200, 1080, 170));

        comboArea.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        comboArea.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboAreaActionPerformed(evt);
            }
        });
        add(comboArea, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 140, 190, -1));

        jLabel2.setText("Select Area:");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 140, -1, -1));

        comboClass.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        comboClass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboClassActionPerformed(evt);
            }
        });
        add(comboClass, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 440, 140, -1));

        jLabel3.setText("Vacancies:");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 440, -1, -1));

        jLabel4.setText("Class:");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 440, -1, -1));

        txtVacancy.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        add(txtVacancy, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 440, 90, 20));
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
         userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
        
    }//GEN-LAST:event_btnBackActionPerformed

    private void comboAreaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboAreaActionPerformed
        // TODO add your handling code here:
        area = (Area) comboArea.getSelectedItem();
        if (area != null) {
            populateTable(area);
        }
        
    }//GEN-LAST:event_comboAreaActionPerformed

    private void btnAcceptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAcceptActionPerformed
        // TODO add your handling code here:
         int selectedRow = tbl.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a valid row");
            return;
        }
        
        int vac = Integer.parseInt(txtVacancy.getText());
        
        if(vac<=0){
            JOptionPane.showMessageDialog(null, "No vacancies left for the selected class");
            return;
        }
        String c = (String) comboClass.getSelectedItem();
        ClassVacancy cv = ((SchoolRole)role).searchVacancy(c);  
        cv.decrementVacancies();
        
        EduVolToSchoolWorkRequest ewr = (EduVolToSchoolWorkRequest) tbl.getValueAt(selectedRow, 1);        
        ewr.setStatus(acceptStatus);
        
        populateTable(area);        
        JOptionPane.showMessageDialog(null, "Success! Admission processed");
    }//GEN-LAST:event_btnAcceptActionPerformed

    private void btnRejectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRejectActionPerformed
        // TODO add your handling code here:
        int selectedRow = tbl.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a valid row");
            return;
        }
        
        EduVolToSchoolWorkRequest ewr = (EduVolToSchoolWorkRequest) tbl.getValueAt(selectedRow, 1);        
        ewr.setStatus(rejectStatus);
        populateTable(area);
       JOptionPane.showMessageDialog(null, "Success! Admission processed");
    }//GEN-LAST:event_btnRejectActionPerformed

    private void comboClassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboClassActionPerformed
        // TODO add your handling code here:
        String c = (String) comboClass.getSelectedItem();
        ClassVacancy cv = ((SchoolRole)role).searchVacancy(c);
        
        if(cv!=null){
            
            txtVacancy.setText(String.valueOf(cv.getVacancies()));
            
        }else{
            txtVacancy.setText("0");            
            
        }
    }//GEN-LAST:event_comboClassActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAccept;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnReject;
    private javax.swing.JComboBox comboArea;
    private javax.swing.JComboBox<String> comboClass;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbl;
    private javax.swing.JLabel txtVacancy;
    // End of variables declaration//GEN-END:variables
}
