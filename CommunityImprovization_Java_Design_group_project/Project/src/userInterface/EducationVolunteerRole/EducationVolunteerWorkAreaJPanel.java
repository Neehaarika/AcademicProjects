/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface.EducationVolunteerRole;

import Business.Enterprise.Enterprise;
import Business.Network.Area;
import Business.Network.Network;
import Business.Organization.EducationVolunteerOrganization;
import Business.Organization.Organization;
import Business.Organization.SchoolOrganization;
import Business.UserAccount.UserAccount;
import Business.WorkRequest.EduVolToSchoolWorkRequest;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author mahes
 */
public class EducationVolunteerWorkAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form EducationVolunteerWorkAreaJPanel
     */
    private JPanel userProcessContainer;
    private UserAccount userAccount;
    private Organization organization;
    private Network network;
    private Enterprise enterprise;

    private String school = "Schooling/Completed Schooling";
    private String noSchool = "No Schooling/Discontinued";

    private String highestClass[] = {"No School","I", "II", "III", "IV", "V", "VI", "VII", "VIII", "IX", "X", "XI", "XII"};

    public EducationVolunteerWorkAreaJPanel(JPanel userProcessContainer, UserAccount account,
            Organization organization, Network network, Enterprise enterprise) {
        initComponents();

        this.userProcessContainer = userProcessContainer;
        this.userAccount = account;
        this.organization = organization;
        this.network = network;
        this.enterprise = enterprise;

        populateArea();
        populateEducation();

        comboHighest.removeAllItems();
        comboHighest.setVisible(false);
        lblHigh.setVisible(false);

    }

    public void populateArea() {
        comboArea.removeAllItems();
        comboArea.addItem(null);

        for (Area a : network.getAreaList()) {
            comboArea.addItem(a);
        }
    }

    public void populateEducation() {
        comboEducation.removeAllItems();
        comboEducation.addItem(null);

        comboEducation.addItem(school);
        comboEducation.addItem(noSchool);
    }

    public void populateHighestEducation() {
        comboHighest.removeAllItems();
        //comboHighest.addItem(null);

        for (String i : highestClass) {
            comboHighest.addItem(i);
        }
    }

    private boolean validation() {
        if (comboArea.getSelectedItem() == null || comboEducation == null) {
            return false;
        }

        if (txtName.getText().isEmpty() || txtAge.getText().isEmpty()) {
            return false;
        }

        return true;
    }

    private void refreshFields() {
    
        lblHigh.setVisible(false);
        
        populateArea();
        populateEducation();
        comboHighest.setVisible(false);
        
        txtAge.setText("");
        txtName.setText("");        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        comboArea = new javax.swing.JComboBox();
        txtName = new javax.swing.JTextField();
        txtAge = new javax.swing.JTextField();
        comboHighest = new javax.swing.JComboBox();
        lblHigh = new javax.swing.JLabel();
        btnSubmit = new javax.swing.JButton();
        btnRefresh = new javax.swing.JButton();
        comboEducation = new javax.swing.JComboBox<>();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("VOLUNTEER WORK AREA");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(487, 104, -1, -1));

        jLabel2.setText("Area of the Survey:");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(361, 186, 118, -1));

        jLabel3.setText("Name of the Person:");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(361, 248, -1, -1));

        jLabel4.setText("Age of the Person:");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(361, 319, 110, -1));

        jLabel5.setText("Education:");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(361, 389, -1, -1));

        comboArea.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        add(comboArea, new org.netbeans.lib.awtextra.AbsoluteConstraints(514, 186, 264, -1));
        add(txtName, new org.netbeans.lib.awtextra.AbsoluteConstraints(514, 245, 264, -1));
        add(txtAge, new org.netbeans.lib.awtextra.AbsoluteConstraints(514, 316, 264, -1));

        comboHighest.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        add(comboHighest, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 389, 264, -1));

        lblHigh.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblHigh.setText("Highest education level");
        add(lblHigh, new org.netbeans.lib.awtextra.AbsoluteConstraints(899, 361, -1, -1));

        btnSubmit.setText("Submit");
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });
        add(btnSubmit, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 490, 140, -1));

        btnRefresh.setText("Refresh");
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });
        add(btnRefresh, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 490, 122, -1));

        comboEducation.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        comboEducation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboEducationActionPerformed(evt);
            }
        });
        add(comboEducation, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 390, 320, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        // TODO add your handling code here:
        refreshFields();

    }//GEN-LAST:event_btnRefreshActionPerformed

    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed
        // TODO add your handling code here:
        boolean success = false;

        if (!validation()) {
            JOptionPane.showMessageDialog(null, "All are mandatory fields, enter appropriate data");
            return;
        }

        EduVolToSchoolWorkRequest request = new EduVolToSchoolWorkRequest();

        request.setSender(userAccount);
        request.setStatus("case assigned to school");

        request.setArea((Area) comboArea.getSelectedItem());
        request.setPersonName(txtName.getText());
        request.setAge(txtAge.getText());
        request.setEduStatus((String) comboEducation.getSelectedItem());

        if (comboEducation.getSelectedItem().equals(school)) {
            request.setEduHighest("Not Applicable");
            request.setLiterate(true);
        } else {
            request.setEduHighest((String) comboHighest.getSelectedItem());
            request.setLiterate(false);
        }

        for (Organization org : enterprise.getOrganizationDirectory().getOrganizationList()) {
            if (org instanceof SchoolOrganization) {
                success = true;
                org.getWorkQueue().getWorkRequestList().add(request);
                userAccount.getWorkQueue().getWorkRequestList().add(request);
            }
        }

        if (success) {
            JOptionPane.showMessageDialog(null, "Request sent to School");
        } else {
            JOptionPane.showMessageDialog(null, "Oops! Something went wrong");
        }

        refreshFields();

    }//GEN-LAST:event_btnSubmitActionPerformed

    private void comboEducationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboEducationActionPerformed
        // TODO add your handling code here:
        boolean display = false;
        String comboEdu = (String) comboEducation.getSelectedItem();

        if (comboEdu != null) {
            if (comboEdu.equals(noSchool)) {
                comboHighest.setVisible(true);
                lblHigh.setVisible(true);
                populateHighestEducation();
                return;
            }
        }
        comboHighest.setVisible(false);
        lblHigh.setVisible(false);
    }//GEN-LAST:event_comboEducationActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton btnSubmit;
    private javax.swing.JComboBox comboArea;
    private javax.swing.JComboBox<String> comboEducation;
    private javax.swing.JComboBox comboHighest;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel lblHigh;
    private javax.swing.JTextField txtAge;
    private javax.swing.JTextField txtName;
    // End of variables declaration//GEN-END:variables
}
