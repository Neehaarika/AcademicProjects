/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface.CitizenRole;

import Business.EcoSystem;
import Business.Enterprise.CrimeEnterprise;
import Business.Enterprise.Enterprise;
import Business.Network.Area;
import Business.Network.Network;
import Business.Organization.CitizenOrganization;
import Business.Organization.Organization;
import Business.Organization.PoliceOrganization;
import Business.UserAccount.UserAccount;
import Business.WorkRequest.AlertsWorkRequest;
import Business.WorkRequest.CitizenToPoliceWorkrequest;
import Business.WorkRequest.WorkRequest;
import java.awt.CardLayout;
import java.awt.Component;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartFrame;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.data.category.DefaultCategoryDataset;
import userInterface.CitizenJPanel;

/**
 *
 * @author pruth
 */
public class CitizenCrimeWorkArea extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private UserAccount userAccount;
    private Enterprise enterprise;
    private EcoSystem ecoSystem;
    private Network network;
    private Organization organization;

    /**
     * Creates new form CitizenWorkArea
     */
    public CitizenCrimeWorkArea(JPanel userProcessContainer, UserAccount userAccount, Organization organization, Enterprise enterprise, EcoSystem ecoSystem, Network network) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.userAccount = userAccount;
        this.enterprise = enterprise;
        this.ecoSystem = ecoSystem;
        this.network = network;
        this.organization = (CitizenOrganization) organization;
        if (!userAccount.getEmployee().getArea().getName().isEmpty()) {
            lblArea.setText(userAccount.getEmployee().getArea().getName());
        }
        populateNetworkComboBox();
        PopulateAlertsTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnReport = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btnHistory = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        networkComboBox = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        btnNetworkWideReports = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblAlerts = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        lblArea = new javax.swing.JLabel();
        btnMarkAsRead = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 153, 153));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnReport.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        btnReport.setText("REPORT AN INCIDENT");
        btnReport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReportActionPerformed(evt);
            }
        });
        add(btnReport, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 126, 257, -1));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("CITIZEN CRIME WORK AREA ");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 50, 753, -1));

        jLabel2.setBackground(new java.awt.Color(255, 153, 153));
        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("WELCOME");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 19, 753, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setText("HERE YOU CAN:");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 95, 356, -1));

        btnHistory.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        btnHistory.setText("VIEW REPORTED INCIDENTS");
        btnHistory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHistoryActionPerformed(evt);
            }
        });
        add(btnHistory, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 162, -1, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setText("SEE CRIME INDEX FOR A CITY");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 215, -1, -1));

        add(networkComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(138, 256, 134, -1));

        jLabel5.setText("Select City");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 259, 86, -1));

        btnNetworkWideReports.setText("Get crime indexes");
        btnNetworkWideReports.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNetworkWideReportsActionPerformed(evt);
            }
        });
        add(btnNetworkWideReports, new org.netbeans.lib.awtextra.AbsoluteConstraints(84, 302, -1, -1));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel6.setText("CHECK ALERTS");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(365, 97, 132, -1));

        tblAlerts.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Crime", "Area", "Alert Status"
            }
        ));
        jScrollPane1.setViewportView(tblAlerts);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(365, 126, 359, 167));

        jLabel7.setText("Your Area");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(528, 97, -1, -1));
        add(lblArea, new org.netbeans.lib.awtextra.AbsoluteConstraints(615, 95, 109, 22));

        btnMarkAsRead.setText("Mark as Read");
        btnMarkAsRead.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMarkAsReadActionPerformed(evt);
            }
        });
        add(btnMarkAsRead, new org.netbeans.lib.awtextra.AbsoluteConstraints(597, 302, -1, -1));

        jButton1.setText("<<HEAD BACK TO PREVIOUS PAGE");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 0, 0));

        btnBack.setText("<<Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 350, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void btnReportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReportActionPerformed
        // TODO add your handling code here:
        ReportACrimeJPanel reportACrimeJPanel = new ReportACrimeJPanel(userProcessContainer, userAccount, enterprise, ecoSystem);
        userProcessContainer.add("reportACrimeJPanel", reportACrimeJPanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_btnReportActionPerformed

    public void PopulateAlertsTable() {
        DefaultTableModel dtm = (DefaultTableModel) tblAlerts.getModel();
        dtm.setRowCount(0);
        int counter = 0;
        if (userAccount.getEmployee().getArea() != null) {
            for (WorkRequest workRequest : organization.getWorkQueue().getWorkRequestList()) {
                Object[] row = new Object[3];
                row[0] = ((AlertsWorkRequest) workRequest).getCrimeType();
                row[1] = ((AlertsWorkRequest) workRequest).getArea();
                row[2] = ((AlertsWorkRequest) workRequest);
                if (userAccount.getEmployee().getArea().equals(row[1])) {
                    dtm.addRow(row);
                    if (((AlertsWorkRequest) workRequest).getAlertStatus() != null && ((AlertsWorkRequest) workRequest).getAlertStatus().equals("New, Unread")) {
                        counter++;
                    } 
//                    else {
//                        dtm.addRow(row);
//                    }
                }

            }
        }
        if (counter != 0) {
            JOptionPane.showMessageDialog(this, "You have " + counter + " unread alerts", "Alerts", JOptionPane.INFORMATION_MESSAGE);
        }
    }

    public void populateNetworkComboBox() {
        networkComboBox.removeAllItems();
        try {
            for (Network network1 : ecoSystem.getNetworkList()) {
                networkComboBox.addItem(network1);
            }
        } catch (Exception e) {

        }
    }
    private void btnHistoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHistoryActionPerformed
        // TODO add your handling code here:
        ViewReportedIncidents viewReportedIncidents = new ViewReportedIncidents(userProcessContainer, userAccount);
        userProcessContainer.add("viewReportedIncidents", viewReportedIncidents);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_btnHistoryActionPerformed

    private void btnNetworkWideReportsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNetworkWideReportsActionPerformed
        // TODO add your handling code here:
        Network city = (Network) networkComboBox.getSelectedItem();
        DefaultCategoryDataset dcd = new DefaultCategoryDataset();
        Enterprise ent = null;

        Organization org = null;
        for (Enterprise e : city.getEnterpriseDirectory().getEnterpriseList()) {
            if (e instanceof CrimeEnterprise) {
                ent = e;
            }
        }
        if (ent != null) {
            for (Organization o : ent.getOrganizationDirectory().getOrganizationList()) {
                if (o instanceof PoliceOrganization) {
                    org = o;
                }
            }
        }
        if (org != null) {
            for (Area area : city.getAreaList()) {
                int totalSeverityPoints = 0;
                for (WorkRequest workRequest : org.getWorkQueue().getWorkRequestList()) {
                    if (area.equals(((CitizenToPoliceWorkrequest) workRequest).getArea())) {
                        if (workRequest.getStatus().equalsIgnoreCase("PROCESSED")) {
                            totalSeverityPoints = totalSeverityPoints + ((CitizenToPoliceWorkrequest) workRequest).getSeverityPoints();
                            dcd.addValue(totalSeverityPoints, "CrimeIndex", area.getName());
                        }
                    }
                }

            }
        }

        JFreeChart chart = ChartFactory.createBarChart("Bar Chart", "Area", "Crime Index", dcd);
        CategoryPlot plot = chart.getCategoryPlot();

        ChartFrame chrt = new ChartFrame("Trail", chart);
        chrt.setVisible(true);
        chrt.setSize(500, 400);
    }//GEN-LAST:event_btnNetworkWideReportsActionPerformed

    private void btnMarkAsReadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMarkAsReadActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblAlerts.getSelectedRow();
        if (selectedRow >= 0) {
            AlertsWorkRequest workRequest = (AlertsWorkRequest) tblAlerts.getValueAt(selectedRow, 2);
            if (workRequest.getAlertStatus().equalsIgnoreCase("New, Unread")) {
                workRequest.setMessage("Marked as Read");
                workRequest.setAlertStatus("Marked as Read");
                PopulateAlertsTable();
            } else {
                JOptionPane.showMessageDialog(this, "The selected Alert has already been Marked as Read", "WARNING!", JOptionPane.INFORMATION_MESSAGE);
                return;
            }

        } else {
            JOptionPane.showMessageDialog(this, "Please select a row to mark it as read", "WARNING!", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnMarkAsReadActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        CitizenJPanel panel = (CitizenJPanel) component;
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnHistory;
    private javax.swing.JButton btnMarkAsRead;
    private javax.swing.JButton btnNetworkWideReports;
    private javax.swing.JButton btnReport;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblArea;
    private javax.swing.JComboBox networkComboBox;
    private javax.swing.JTable tblAlerts;
    // End of variables declaration//GEN-END:variables
}
