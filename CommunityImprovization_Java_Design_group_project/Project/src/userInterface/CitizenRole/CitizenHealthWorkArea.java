/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface.CitizenRole;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organization.CitizenOrganization;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkRequest.DoctorToCSRHead;

import Business.WorkRequest.DoctorToCitizenWorkreq;
import Business.WorkRequest.WorkRequest;
import com.sun.glass.events.KeyEvent;
import java.util.Properties;
import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author mahes
 */
public class CitizenHealthWorkArea extends javax.swing.JPanel {

    /**
     * Creates new form CitizenHealthWorkArea
     */
    private JPanel userProcessContainer;
    private UserAccount account;
    private Organization organization;
    private Enterprise enterprise;
    private EcoSystem business;
    private Network network;

    public CitizenHealthWorkArea(JPanel userProcessContainer, UserAccount account, Organization organization, Enterprise enterprise, EcoSystem business, Network network) {

        initComponents();
        this.business = business;
        this.enterprise = enterprise;
        this.network = network;
        this.userProcessContainer = userProcessContainer;
        this.account = account;
        this.organization = (CitizenOrganization) organization;
        lblAmount.setVisible(false);
        txtBoxAmount.setVisible(false);
        btnCompleteRequest.setVisible(false);
        populateCitizenWorkReqTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCitizenWorkreq = new javax.swing.JTable();
        btnFund = new javax.swing.JButton();
        btnAssign = new javax.swing.JButton();
        btnReject = new javax.swing.JButton();
        btnCompleteRequest = new javax.swing.JButton();
        lblAmount = new javax.swing.JLabel();
        txtBoxAmount = new javax.swing.JTextField();

        setBackground(new java.awt.Color(204, 204, 255));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("CITIZEN HEALTH WORK AREA");

        jLabel2.setBackground(new java.awt.Color(204, 255, 255));
        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("WELCOME");

        jLabel3.setText("FUND Any below Requests:");

        tblCitizenWorkreq.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Patient Name", "Disease", "Treatment", "funds Requested", "sender", "Status", "Funds Granted"
            }
        ));
        jScrollPane1.setViewportView(tblCitizenWorkreq);

        btnFund.setText("Fund");
        btnFund.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFundActionPerformed(evt);
            }
        });

        btnAssign.setText("ASSIGN");
        btnAssign.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAssignActionPerformed(evt);
            }
        });

        btnReject.setText("REJECT");
        btnReject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRejectActionPerformed(evt);
            }
        });

        btnCompleteRequest.setText("COMPLETE REQUEST");
        btnCompleteRequest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCompleteRequestActionPerformed(evt);
            }
        });

        lblAmount.setText("AMOUNT TO GIVE:");

        txtBoxAmount.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtBoxAmountKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 821, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(40, 40, 40))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(212, 212, 212)
                .addComponent(btnAssign)
                .addGap(95, 95, 95)
                .addComponent(btnReject)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnFund)
                .addGap(94, 94, 94))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtBoxAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(53, 53, 53)
                        .addComponent(btnCompleteRequest, javax.swing.GroupLayout.PREFERRED_SIZE, 338, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addGap(34, 34, 34)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnFund)
                    .addComponent(btnAssign)
                    .addComponent(btnReject))
                .addGap(60, 60, 60)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCompleteRequest, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtBoxAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(125, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnFundActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFundActionPerformed

        int selectedRow = tblCitizenWorkreq.getSelectedRow();
        if (selectedRow >= 0) {
            DoctorToCSRHead request = (DoctorToCSRHead) tblCitizenWorkreq.getValueAt(selectedRow, 2);
            if (request.getStatus().equals("Assigned to Citizen")) {
                btnCompleteRequest.setVisible(true);
                lblAmount.setVisible(true);
                txtBoxAmount.setVisible(true);
                btnCompleteRequest.setEnabled(true);
            }

            // TODO add your handling code here:
        } else {
            JOptionPane.showMessageDialog(this, "PLEASE Assign a Request To Accept", "NO INPUT DETECTED!!", JOptionPane.WARNING_MESSAGE);
        }

// TODO add your handling code here:
    }//GEN-LAST:event_btnFundActionPerformed

    private void btnAssignActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAssignActionPerformed

        int selectedRow = tblCitizenWorkreq.getSelectedRow();

        if (selectedRow >= 0) {
            DoctorToCSRHead request = (DoctorToCSRHead) tblCitizenWorkreq.getValueAt(selectedRow, 2);

            if (request.getReceiver() == null) {
                request.setStatus("Assigned to Citizen");
                request.setReceiver(account);
                request.getVolunteerToDoctorWorkRequest().setReceiver(account);
                populateCitizenWorkReqTable();
            } else {
                JOptionPane.showMessageDialog(this, "This request is already assigned", "Sorry", JOptionPane.WARNING_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "PLEASE SELECT A ROW TO VIEW DETAILS", "NO INPUT DETECTED!!", JOptionPane.WARNING_MESSAGE);
        }
// TODO add your handling code here:
    }//GEN-LAST:event_btnAssignActionPerformed

    private void btnRejectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRejectActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblCitizenWorkreq.getSelectedRow();
        if (selectedRow >= 0) {
            DoctorToCSRHead request = (DoctorToCSRHead) tblCitizenWorkreq.getValueAt(selectedRow, 2);

            if (request.getStatus().equals("Assigned to Citizen")) {
                request.setStatus("Rejected by Citizen");
                // request.setReceiver(account);
                request.getVolunteerToDoctorWorkRequest().setCSRName(account.getEmployee().getName());
                populateCitizenWorkReqTable();
            } else {
                JOptionPane.showMessageDialog(this, "This request is already assigned", "Sorry", JOptionPane.WARNING_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "PLEASE SELECT A ROW TO VIEW DETAILS", "NO INPUT DETECTED!!", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnRejectActionPerformed

    private void btnCompleteRequestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCompleteRequestActionPerformed

        int selectedRow = tblCitizenWorkreq.getSelectedRow();

        if (selectedRow >= 0) {
            DoctorToCSRHead request = (DoctorToCSRHead) tblCitizenWorkreq.getValueAt(selectedRow, 2);
            if (request.getStatus().equals("Assigned to Citizen")) {
                if(request.getFunds().equals(txtBoxAmount.getText())){
                request.setFundsGranted(txtBoxAmount.getText());
                request.setStatus("Citizen granted funds");
                request.getVolunteerToDoctorWorkRequest().setStatus("Citizen granted funds");
                populateCitizenWorkReqTable();
                }
                else{
                    JOptionPane.showMessageDialog(this, "Fund amount does not match", "WARNING!!", JOptionPane.WARNING_MESSAGE);
                }
            }

            // TODO add your handling code here:
        } else {
            JOptionPane.showMessageDialog(this, "PLEASE Assign a Request To Accept", "NO INPUT DETECTED!!", JOptionPane.WARNING_MESSAGE);
        }

// TODO add your handling code here:
    }//GEN-LAST:event_btnCompleteRequestActionPerformed

    private void txtBoxAmountKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBoxAmountKeyTyped

char ch = evt.getKeyChar();
    if(!(Character.isDigit(ch)||(ch == KeyEvent.VK_DELETE)|| ch== KeyEvent.VK_BACKSPACE))
    {
      evt.consume();
        JOptionPane.showMessageDialog(null,"Please enter data of type integer");
        // TODO add your handling code here:
    }
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBoxAmountKeyTyped

    private void populateCitizenWorkReqTable() {

        DefaultTableModel dtm = (DefaultTableModel) tblCitizenWorkreq.getModel();
        dtm.setRowCount(0);
        for (WorkRequest workRequest : organization.getWorkQueue().getWorkRequestList()) {
            Object[] row = new Object[7];
            row[0] = ((DoctorToCSRHead) workRequest).getPatientName();
            row[1] = ((DoctorToCSRHead) workRequest).getDisease();
            row[2] = ((DoctorToCSRHead) workRequest);
            row[3] = ((DoctorToCSRHead) workRequest).getFunds();
            row[4] = ((DoctorToCSRHead) workRequest).getSender();
            row[5] = workRequest.getStatus();

            row[6] = ((DoctorToCSRHead) workRequest).getFundsGranted();
            dtm.addRow(row);
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAssign;
    private javax.swing.JButton btnCompleteRequest;
    private javax.swing.JButton btnFund;
    private javax.swing.JButton btnReject;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAmount;
    private javax.swing.JTable tblCitizenWorkreq;
    private javax.swing.JTextField txtBoxAmount;
    // End of variables declaration//GEN-END:variables
}
