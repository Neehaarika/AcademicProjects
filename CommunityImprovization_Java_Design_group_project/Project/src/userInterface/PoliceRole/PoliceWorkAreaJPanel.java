/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface.PoliceRole;

import Business.Enterprise.Enterprise;
import Business.Network.Area;
import Business.Network.Network;
import Business.Organization.Organization;
import Business.Organization.PoliceOrganization;
import Business.UserAccount.UserAccount;
import Business.WorkRequest.CitizenToPoliceWorkrequest;
import Business.WorkRequest.WorkRequest;
import java.awt.CardLayout;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartFrame;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PiePlot;

import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.general.DefaultPieDataset;

/**
 *
 * @author pruth
 */
public class PoliceWorkAreaJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private UserAccount userAccount;
    private Organization policeOrganization;
    private Network network;
    private Enterprise enterprise;

    /**
     * Creates new form PoliceWorkAreaJPanel
     */
    public PoliceWorkAreaJPanel(JPanel userProcessContainer, UserAccount userAccount, Organization organization, Enterprise enterprise, Network network) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.userAccount = userAccount;
        this.policeOrganization = (PoliceOrganization) organization;
        this.network = network;
        this.enterprise = enterprise;
        populateTable();
        populateAreaComboBox();
    }

    public void populateTable() {
        DefaultTableModel dtm = (DefaultTableModel) crimeTable.getModel();
        dtm.setRowCount(0);

        for (WorkRequest workRequest : policeOrganization.getWorkQueue().getWorkRequestList()) {
            Object[] row = new Object[10];
            row[0] = ((CitizenToPoliceWorkrequest) workRequest).getIncidentID();
            row[1] = workRequest;
            row[2] = workRequest.getSender();
            row[3] = ((CitizenToPoliceWorkrequest) workRequest).getName();
            row[4] = ((CitizenToPoliceWorkrequest) workRequest).getPhn();
            row[5] = ((CitizenToPoliceWorkrequest) workRequest).getNetwork();
            row[6] = ((CitizenToPoliceWorkrequest) workRequest).getArea();
            row[7] = workRequest.getReceiver() == null ? null : workRequest.getReceiver().getEmployee().getName();
            row[8] = workRequest.getStatus();
            row[9] = ((CitizenToPoliceWorkrequest) workRequest).getActionTaken();
            dtm.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        crimeTable = new javax.swing.JTable();
        btnAssign = new javax.swing.JButton();
        btnViewAndProcess = new javax.swing.JButton();
        btnViewCrimeRatesByArea = new javax.swing.JButton();
        areaComboBox = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        btnAreaWiseCharts = new javax.swing.JButton();
        btnRequestPatrolling = new javax.swing.JButton();
        btnViewSentRequests = new javax.swing.JButton();
        btnReject = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 153, 153));

        crimeTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Complaint ID", "Message", "Sender", "Sender Name", "Phone No", "Network", "Area", "Receiver", "Status", "Action Taken"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(crimeTable);

        btnAssign.setText("Assign to me");
        btnAssign.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAssignActionPerformed(evt);
            }
        });

        btnViewAndProcess.setText("View and Process");
        btnViewAndProcess.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewAndProcessActionPerformed(evt);
            }
        });

        btnViewCrimeRatesByArea.setText("View Crime Rates by Area");
        btnViewCrimeRatesByArea.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewCrimeRatesByAreaActionPerformed(evt);
            }
        });

        areaComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel1.setText("Select Area");

        btnAreaWiseCharts.setText("Get charts for this area");
        btnAreaWiseCharts.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAreaWiseChartsActionPerformed(evt);
            }
        });

        btnRequestPatrolling.setText("Request Patrolling");
        btnRequestPatrolling.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRequestPatrollingActionPerformed(evt);
            }
        });

        btnViewSentRequests.setText("View Sent Requests");
        btnViewSentRequests.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewSentRequestsActionPerformed(evt);
            }
        });

        btnReject.setText("Reject");
        btnReject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRejectActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnAssign, javax.swing.GroupLayout.DEFAULT_SIZE, 146, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnAreaWiseCharts, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(areaComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnViewAndProcess, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(btnReject, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 276, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnRequestPatrolling, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnViewCrimeRatesByArea, javax.swing.GroupLayout.DEFAULT_SIZE, 238, Short.MAX_VALUE)
                    .addComponent(btnViewSentRequests, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAssign)
                    .addComponent(btnViewAndProcess)
                    .addComponent(btnViewCrimeRatesByArea)
                    .addComponent(btnReject))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnRequestPatrolling)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(areaComboBox)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAreaWiseCharts))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnViewSentRequests)))
                .addGap(79, 79, 79))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnAssignActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAssignActionPerformed
        // TODO add your handling code here:
        int selectedRow = crimeTable.getSelectedRow();

        if (selectedRow >= 0) {
            CitizenToPoliceWorkrequest incident = (CitizenToPoliceWorkrequest) crimeTable.getValueAt(selectedRow, 1);

            if (incident.getReceiver() == null) {
                incident.setStatus("Processing");
                incident.setReceiver(userAccount);
                populateTable();
            } else {
                JOptionPane.showMessageDialog(this, "This Complaint is already assigned", "Sorry", JOptionPane.WARNING_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "PLEASE SELECT A ROW TO VIEW DETAILS", "NO INPUT DETECTED!!", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnAssignActionPerformed

    private void btnViewAndProcessActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewAndProcessActionPerformed
        // TODO add your handling code here:
        int selectedRow = crimeTable.getSelectedRow();

        if (selectedRow >= 0) {
            CitizenToPoliceWorkrequest incident = (CitizenToPoliceWorkrequest) crimeTable.getValueAt(selectedRow, 1);
            if (incident.getStatus() == "Processing" && incident.getReceiver() != null) {
                ViewIncidentJpanel panel = new ViewIncidentJpanel(userProcessContainer, userAccount, incident, enterprise);
                userProcessContainer.add("ViewIncidentJpanel", panel);
                CardLayout layout = (CardLayout) userProcessContainer.getLayout();
                layout.next(userProcessContainer);
            }
        } else {
            JOptionPane.showMessageDialog(this, "PLEASE SELECT A ROW TO VIEW DETAILS", "NO INPUT DETECTED!!", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnViewAndProcessActionPerformed

    public void populateAreaComboBox() {
        areaComboBox.removeAllItems();
        for (Area area : network.getAreaList()) {
            areaComboBox.addItem(area);
        }
    }
    private void btnViewCrimeRatesByAreaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewCrimeRatesByAreaActionPerformed
        // TODO add your handling code here:
        // int totalSeverityPoints = 0;
        DefaultCategoryDataset dcd = new DefaultCategoryDataset();
        for (Area area : network.getAreaList()) {
            int totalSeverityPoints = 0;
            for (WorkRequest workRequest : policeOrganization.getWorkQueue().getWorkRequestList()) {
                if (area.equals(((CitizenToPoliceWorkrequest) workRequest).getArea())) {
                    if (workRequest.getStatus().equalsIgnoreCase("PROCESSED")) {
                        totalSeverityPoints = totalSeverityPoints + ((CitizenToPoliceWorkrequest) workRequest).getSeverityPoints();
                        dcd.addValue(totalSeverityPoints, "CrimeIndex", area.getName());
                    }
                }
            }

        }

        JFreeChart chart = ChartFactory.createBarChart("Bar Chart", "Area", "Crime Index", dcd);
        CategoryPlot plot = chart.getCategoryPlot();

        ChartFrame chrt = new ChartFrame("Trail", chart);
        chrt.setVisible(true);
        chrt.setSize(500, 400);

    }//GEN-LAST:event_btnViewCrimeRatesByAreaActionPerformed

    private void btnAreaWiseChartsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAreaWiseChartsActionPerformed
        // TODO add your handling code here:
        Area area = (Area) areaComboBox.getSelectedItem();
        DefaultPieDataset dpd = new DefaultPieDataset();
        ArrayList<String> crimeList = new ArrayList<>();
        crimeList.add("ROBBERY");
        crimeList.add("MURDER");
        crimeList.add("RAPE");
        crimeList.add("SHOOTING");
        crimeList.add("OTHERS");
        for (String crime : crimeList) {
            int totalInstances = 0;
            int counter = 0;
            for (WorkRequest workRequest : policeOrganization.getWorkQueue().getWorkRequestList()) {
                if (area.equals(((CitizenToPoliceWorkrequest) workRequest).getArea())) {
                    if (((CitizenToPoliceWorkrequest) workRequest).getIncidentType().equals(crime)) {
                        if (workRequest.getStatus().equalsIgnoreCase("PROCESSED")) {
                            counter++;
                            totalInstances = counter;
                        }
                    }
                    if (totalInstances != 0) {
                        dpd.setValue(crime, totalInstances);
                    }
                }
            }
        }
        JFreeChart chart = ChartFactory.createPieChart(area.getName(), dpd, true, true, true);
        PiePlot p = (PiePlot) chart.getPlot();
        p.setSimpleLabels(true);

        ChartFrame c = new ChartFrame("Pie Chart", chart);
        c.setVisible(true);
        c.setSize(400, 500);
    }//GEN-LAST:event_btnAreaWiseChartsActionPerformed

    private void btnRequestPatrollingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRequestPatrollingActionPerformed
        // TODO add your handling code here:
        RequestPatrollingJPanel panel1 = new RequestPatrollingJPanel(userProcessContainer, userAccount, enterprise, network);
        userProcessContainer.add("RequestPatrollingJPanel", panel1);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_btnRequestPatrollingActionPerformed

    private void btnViewSentRequestsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewSentRequestsActionPerformed
        // TODO add your handling code here:
        ViewSentRequestsJPanel vsrjp = new ViewSentRequestsJPanel(userProcessContainer, userAccount);
        userProcessContainer.add("ViewSentRequestsJPanel", vsrjp);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_btnViewSentRequestsActionPerformed

    private void btnRejectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRejectActionPerformed
        // TODO add your handling code here:
        int selectedRow = crimeTable.getSelectedRow();

        if (selectedRow >= 0) {
            CitizenToPoliceWorkrequest incident = (CitizenToPoliceWorkrequest) crimeTable.getValueAt(selectedRow, 1);
            if (incident.getStatus() == "Processing" && incident.getReceiver() != null) {
                incident.setStatus("Rejected");
            }
        } else {
            JOptionPane.showMessageDialog(this, "PLEASE SELECT A ROW TO VIEW DETAILS", "NO INPUT DETECTED!!", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnRejectActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox areaComboBox;
    private javax.swing.JButton btnAreaWiseCharts;
    private javax.swing.JButton btnAssign;
    private javax.swing.JButton btnReject;
    private javax.swing.JButton btnRequestPatrolling;
    private javax.swing.JButton btnViewAndProcess;
    private javax.swing.JButton btnViewCrimeRatesByArea;
    private javax.swing.JButton btnViewSentRequests;
    private javax.swing.JTable crimeTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
