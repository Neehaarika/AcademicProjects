/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface.HealthVolunteerRole;

import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organization.DoctorOrganization;
import Business.Organization.HealthVolunteerOrganization;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkRequest.VolunteerToDoctor;
import com.sun.glass.events.KeyEvent;
import java.awt.CardLayout;
import java.awt.Component;
import java.util.Properties;
import java.util.regex.Pattern;
import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import userInterface.HealthVolunteerRole.HealthVolunteerWorkAreaJPanel;

/**
 *
 * @author aravind
 */
public class regPatientandRequestDoctorJPanel extends javax.swing.JPanel {

    /**
     * Creates new form RegisterPatient
     */
    private JPanel userProcessContainer;
    private UserAccount useraccount;
    private HealthVolunteerOrganization healthorganzation;
    private Network network;
    private Enterprise enterprise;

    public regPatientandRequestDoctorJPanel(JPanel userprocesscontainer, UserAccount useraccount, HealthVolunteerOrganization healthvolunteerorganization, Network network, Enterprise enterprise) {

        initComponents();
        this.userProcessContainer = userprocesscontainer;
        this.useraccount = useraccount;
        this.healthorganzation = healthvolunteerorganization;
        this.network = network;
        this.enterprise = enterprise;

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtBoxContact = new javax.swing.JTextField();
        txtBoxDisease = new javax.swing.JTextField();
        txtboxEmail = new javax.swing.JTextField();
        txtboxName = new javax.swing.JTextField();
        txtboxHowlong = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        btnSendtoDoctor = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();

        setBackground(new java.awt.Color(204, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("ENTER PATIENT DETAILS TO START ");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 140, -1, -1));

        txtBoxContact.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtBoxContactKeyTyped(evt);
            }
        });
        add(txtBoxContact, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 250, 180, -1));

        txtBoxDisease.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBoxDiseaseActionPerformed(evt);
            }
        });
        add(txtBoxDisease, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 280, 180, -1));

        txtboxEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtboxEmailActionPerformed(evt);
            }
        });
        add(txtboxEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 220, 180, -1));
        add(txtboxName, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 190, 180, -1));

        txtboxHowlong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtboxHowlongActionPerformed(evt);
            }
        });
        add(txtboxHowlong, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 310, 180, -1));

        jLabel3.setText("Contact:");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 250, 120, 20));

        jLabel4.setText("Name:");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 190, 120, 30));

        jLabel5.setText("Suffering From:");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 280, 130, 20));

        jLabel6.setText("From How Long:");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 300, 130, 30));

        jLabel7.setText("Email:");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(255, 216, 130, 30));

        btnSendtoDoctor.setText("Send Request to Doctor");
        btnSendtoDoctor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSendtoDoctorActionPerformed(evt);
            }
        });
        add(btnSendtoDoctor, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 390, -1, -1));

        btnBack.setText("<< Back To Previous Page");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void txtboxEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtboxEmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtboxEmailActionPerformed

    private void txtBoxDiseaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBoxDiseaseActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBoxDiseaseActionPerformed

    private void txtboxHowlongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtboxHowlongActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtboxHowlongActionPerformed

    private void btnSendtoDoctorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSendtoDoctorActionPerformed

        if (!txtBoxContact.getText().isEmpty()
                || !txtBoxDisease.getText().isEmpty()
                || !txtboxEmail.getText().isEmpty()
                || !txtboxHowlong.getText().isEmpty()
                || !txtboxName.getText().isEmpty()) {

            if (!(Pattern.matches("^[a-zA-Z0-9]+[@]{1}[a-zA-Z0-9]+[.]{1}+[a-zA-Z0-9]+$", txtboxEmail.getText()))) {
                JOptionPane.showMessageDialog(null, "Please enter a valid e-mail");
                return;
            }

            String name = txtboxName.getText();
            String disease = txtBoxDisease.getText();
            String contact = txtBoxContact.getText();
            String duration = txtboxHowlong.getText();

            VolunteerToDoctor request = new VolunteerToDoctor();

            request.setName(name);
            request.setDisease(disease);
            request.setDuration(duration);
            request.setContact(contact);
            request.setSender(useraccount);
            request.setStatus("Patient sent to Doctor");

            Organization org = null;

            for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()) {
                if (organization instanceof DoctorOrganization) {
                    org = organization;
                    break;
                }
            }

            if (org != null) {

                org.getWorkQueue().getWorkRequestList().add(request);
                useraccount.getWorkQueue().getWorkRequestList().add(request);

            }

            JOptionPane.showMessageDialog(this, "Request sent to Doctor", "Success", JOptionPane.INFORMATION_MESSAGE);

        }
        else {JOptionPane.showMessageDialog (this, "Please enter all fields To serve Patient Better", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        // TODO add your handling code here:
    }//GEN-LAST:event_btnSendtoDoctorActionPerformed
    }
    
    
    
    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed

        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        HealthVolunteerWorkAreaJPanel panel = (HealthVolunteerWorkAreaJPanel) component;
        panel.populateHistorytable();
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);

        // TODO add your handling code here:
    }//GEN-LAST:event_btnBackActionPerformed

    private void txtBoxContactKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBoxContactKeyTyped

char ch = evt.getKeyChar();
    if(!(Character.isDigit(ch)||(ch == KeyEvent.VK_DELETE)|| ch== KeyEvent.VK_BACKSPACE))
    {
      evt.consume();
        JOptionPane.showMessageDialog(null,"Please enter data of type integer");
        // TODO add your handling code here:
    }

        // TODO add your handling code here:
    }//GEN-LAST:event_txtBoxContactKeyTyped

    public static void sendMail(String from, String password, String message, String to[]) {
        String host = "smtp.gmail.com";
        Properties props = System.getProperties();
        props.put("mail.smtp.starttls.enable", "true");
        props.put("mail.smtp.host", host);
        props.put("mail.smtp.user", from);
        props.put("mail.smtp.password", password);
        props.put("mail.smtp.port", 587);
        props.put("mail.smtp.auth", "true");

        Session session = Session.getDefaultInstance(props);
        MimeMessage mimeMessage = new MimeMessage(session);
        try {
            mimeMessage.setFrom(new InternetAddress(from));

            InternetAddress[] toAddress = new InternetAddress[to.length];
            for (int i = 0; i < to.length; i++) {
                toAddress[i] = new InternetAddress(to[i]);
            }
            for (int i = 0; i < toAddress.length; i++) {
                mimeMessage.addRecipient(Message.RecipientType.TO, toAddress[i]);
            }
            mimeMessage.setSubject("Crime alert");
            mimeMessage.setText(message);
            Transport transport = session.getTransport("smtp");
            transport.connect(host, from, password);
            transport.sendMessage(mimeMessage, mimeMessage.getAllRecipients());
            transport.close();
        } catch (MessagingException me) {
            me.printStackTrace();
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnSendtoDoctor;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JTextField txtBoxContact;
    private javax.swing.JTextField txtBoxDisease;
    private javax.swing.JTextField txtboxEmail;
    private javax.swing.JTextField txtboxHowlong;
    private javax.swing.JTextField txtboxName;
    // End of variables declaration//GEN-END:variables
}
