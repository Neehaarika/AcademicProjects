/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface.CSRRole;

import Business.Network.Network;
import Business.Organization.CSROrganization;
import Business.UserAccount.UserAccount;
import Business.WorkRequest.DoctorToCSRHead;

import Business.WorkRequest.WorkRequest;
import com.sun.glass.events.KeyEvent;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author mahes
 */
public class CSRHealthWorkAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form CSRHealthWorkAreaJPanel
     */
    private JPanel userProcessContainer;
    private UserAccount useraccount;
    private CSROrganization csrorganization;
    private Network network;

    public CSRHealthWorkAreaJPanel(JPanel userProcessContainer, UserAccount account, CSROrganization csrOrganization, Network network) {

        initComponents();
        txtBoxAmountGranted.setVisible(false);
        lblAmountGranted.setVisible(false);
        btnCompleteRequest.setVisible(false);
        this.csrorganization = csrOrganization;
        this.userProcessContainer = userProcessContainer;
        this.useraccount = account;
        this.network = network;
        populateCSRTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCSRHead = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        btnAssigntome = new javax.swing.JButton();
        btnAccepttoFund = new javax.swing.JButton();
        btnRejectRequest = new javax.swing.JButton();
        txtBoxAmountGranted = new javax.swing.JTextField();
        lblAmountGranted = new javax.swing.JLabel();
        btnCompleteRequest = new javax.swing.JButton();

        setBackground(new java.awt.Color(204, 255, 255));

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel1.setText("CSR HEALTH WORK AREA");

        tblCSRHead.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Patient Name", "Disease", "Diagnosis", "Funds Required", "Doctor", "Status", "CSR Name", "Funds Given"
            }
        ));
        jScrollPane1.setViewportView(tblCSRHead);

        jLabel2.setText("Work requests");

        btnAssigntome.setText("Assign To Me");
        btnAssigntome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAssigntomeActionPerformed(evt);
            }
        });

        btnAccepttoFund.setText("Accept to fund");
        btnAccepttoFund.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAccepttoFundActionPerformed(evt);
            }
        });

        btnRejectRequest.setText("Reject Request");
        btnRejectRequest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRejectRequestActionPerformed(evt);
            }
        });

        txtBoxAmountGranted.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBoxAmountGrantedActionPerformed(evt);
            }
        });
        txtBoxAmountGranted.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtBoxAmountGrantedKeyTyped(evt);
            }
        });

        lblAmountGranted.setText("Amount Granted:");

        btnCompleteRequest.setText("Complete Request");
        btnCompleteRequest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCompleteRequestActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(370, 370, 370)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 970, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(259, 259, 259)
                                .addComponent(lblAmountGranted, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(84, 84, 84)
                                .addComponent(btnAssigntome)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnAccepttoFund)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnRejectRequest)
                                .addGap(81, 81, 81))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtBoxAmountGranted, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(82, 82, 82)
                                .addComponent(btnCompleteRequest)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(jLabel1)
                .addGap(17, 17, 17)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAssigntome)
                    .addComponent(btnAccepttoFund)
                    .addComponent(btnRejectRequest))
                .addGap(49, 49, 49)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtBoxAmountGranted, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblAmountGranted, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCompleteRequest))
                .addContainerGap(151, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtBoxAmountGrantedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBoxAmountGrantedActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBoxAmountGrantedActionPerformed

    private void btnAccepttoFundActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAccepttoFundActionPerformed

        int selectedRow = tblCSRHead.getSelectedRow();
        if (selectedRow >= 0) {
            DoctorToCSRHead request = (DoctorToCSRHead) tblCSRHead.getValueAt(selectedRow, 2);
            if (request.getStatus() == "Assigned to CSR Head") {
                btnCompleteRequest.setVisible(true);
                lblAmountGranted.setVisible(true);
                txtBoxAmountGranted.setVisible(true);
                btnRejectRequest.setEnabled(false);
            }

            // TODO add your handling code here:
        } else {
            JOptionPane.showMessageDialog(this, "PLEASE Assign a Request To Accept", "NO INPUT DETECTED!!", JOptionPane.WARNING_MESSAGE);
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_btnAccepttoFundActionPerformed

    private void btnAssigntomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAssigntomeActionPerformed

        int selectedRow = tblCSRHead.getSelectedRow();

        if (selectedRow >= 0) {
            DoctorToCSRHead request = (DoctorToCSRHead) tblCSRHead.getValueAt(selectedRow, 2);

            if (request.getReceiver() == null) {
                request.setStatus("Assigned to CSR Head");
                request.setReceiver(useraccount);
                request.getVolunteerToDoctorWorkRequest().setCSRName(useraccount.getEmployee().getName());
                populateCSRTable();
            } else {
                JOptionPane.showMessageDialog(this, "This request is already Processed", "Sorry", JOptionPane.WARNING_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "PLEASE SELECT A ROW TO VIEW DETAILS", "NO INPUT DETECTED!!", JOptionPane.WARNING_MESSAGE);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_btnAssigntomeActionPerformed

    private void btnRejectRequestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRejectRequestActionPerformed

        int selectedRow = tblCSRHead.getSelectedRow();
        if (selectedRow >= 0) {
            DoctorToCSRHead request = (DoctorToCSRHead) tblCSRHead.getValueAt(selectedRow, 2);
            if (request.getStatus() == "Assigned to CSR Head") {
                request.setStatus("Rejeceted by CSR Head");
                populateCSRTable();
            } else {
                JOptionPane.showMessageDialog(this, "Please assign to Reject this request", "Sorry", JOptionPane.WARNING_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "PLEASE SELECT A ROW TO REJECT", "NO INPUT DETECTED!!", JOptionPane.WARNING_MESSAGE);
        }
// TODO add your handling code here:
    }//GEN-LAST:event_btnRejectRequestActionPerformed

    private void btnCompleteRequestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCompleteRequestActionPerformed

        int selectedRow = tblCSRHead.getSelectedRow();

        if (selectedRow >= 0) {
            DoctorToCSRHead request = (DoctorToCSRHead) tblCSRHead.getValueAt(selectedRow, 2);
            if (request.getStatus() == "Assigned to CSR Head") {
                if(request.getFunds().equals(txtBoxAmountGranted.getText())){
                request.setFundsGranted(txtBoxAmountGranted.getText());
                request.setStatus("CSR granted funds");
                populateCSRTable();
                request.getVolunteerToDoctorWorkRequest().setStatus("CSR granted funds");
                }else{
                    JOptionPane.showMessageDialog(this, "Fund amount does not match", "WARNING!!", JOptionPane.WARNING_MESSAGE);
                }
            }

            // TODO add your handling code here:
        } else {
            JOptionPane.showMessageDialog(this, "PLEASE Assign a Request To Accept", "NO INPUT DETECTED!!", JOptionPane.WARNING_MESSAGE);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_btnCompleteRequestActionPerformed

    private void txtBoxAmountGrantedKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBoxAmountGrantedKeyTyped
     char ch = evt.getKeyChar();
    if(!(Character.isDigit(ch)||(ch == KeyEvent.VK_DELETE)|| ch== KeyEvent.VK_BACKSPACE))
    {
      evt.consume();
        JOptionPane.showMessageDialog(null,"Please enter data of type integer");
        // TODO add your handling code here:
    }
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBoxAmountGrantedKeyTyped


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAccepttoFund;
    private javax.swing.JButton btnAssigntome;
    private javax.swing.JButton btnCompleteRequest;
    private javax.swing.JButton btnRejectRequest;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAmountGranted;
    private javax.swing.JTable tblCSRHead;
    private javax.swing.JTextField txtBoxAmountGranted;
    // End of variables declaration//GEN-END:variables

    private void populateCSRTable() {

        DefaultTableModel dtm = (DefaultTableModel) tblCSRHead.getModel();
        dtm.setRowCount(0);
        for (WorkRequest workRequest : csrorganization.getWorkQueue().getWorkRequestList()) {
            Object[] row = new Object[8]; 
            row[0] = ((DoctorToCSRHead) workRequest).getPatientName();
            row[1] = ((DoctorToCSRHead) workRequest).getDisease();
            row[2] = ((DoctorToCSRHead) workRequest);
            row[3] = ((DoctorToCSRHead) workRequest).getFunds();
            row[4] = ((DoctorToCSRHead) workRequest).getSender();
            row[5] = workRequest.getStatus();
            row[6] = workRequest.getReceiver();
            row[7] = ((DoctorToCSRHead) workRequest).getFundsGranted();
            dtm.addRow(row);
        }
    }

}
